# asyn record for the underlying asyn octet port
file "$(ASYN)/db/asynRecord.db" { pattern
{P,           R,       PORT,      ADDR,   IMAX,    OMAX}
{SIM1:    OctetAsyn,   sim1,        0,      80,      80}
}

# These are the A0 inputs done with bit access
file "../../db/bi_bit.template" { pattern
{P,        R,          PORT,         OFFSET,   ZNAM,   ONAM,  ZSV,       OSV,    SCAN}
{SIM1:,    BI0B,     A0_In_Bits,     0,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{SIM1:,    BI1B,     A0_In_Bits,     1,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{SIM1:,    BI2B,     A0_In_Bits,     2,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{SIM1:,    BI3B,     A0_In_Bits,     3,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{SIM1:,    BI4B,     A0_In_Bits,     4,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{SIM1:,    BI5B,     A0_In_Bits,     5,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{SIM1:,    BI6B,     A0_In_Bits,     6,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{SIM1:,    BI7B,     A0_In_Bits,     7,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
}
file "../../db/mbbiDirect.template" { pattern
{P,           R,       PORT,          OFFSET,  MASK,   SCAN}
{SIM1:,    MBBID0,   A0_In_Bits,      0,       0xFFFF, "I/O Intr"}
}
file "../../db/intarray_in.template" { pattern
{P,           R,        PORT,           NELM,   SCAN}
{SIM1:,    BIArray,    A0_In_Bits,      32,     "I/O Intr"}
}
file "../../db/asynRecord.template" { pattern
{P,           R,       PORT,         ADDR,     TMOD,  IFACE}
{SIM1:,    BIAsyn,   A0_In_Bits,     0,        Read,  asynUInt32Digital}
}
file "../../db/statistics.template" { pattern
{P,        R,      PORT,        SCAN}
{SIM1:,    BI,     A0_In_Bits,  "10 second"}
} 
file "../../db/poll_delay.template" { pattern
{P,           R,            PORT}
{SIM1:,    BIPollDelay, A0_In_Bits}
}

# These are the A0 outputs done with bit access.
file "../../db/bo_bit.template" { pattern
{P,        R,             PORT,       OFFSET,   ZNAM,   ONAM}
{SIM1:,    BO0B,     A0_Out_Bits,     0,        Low,    High}
{SIM1:,    BO1B,     A0_Out_Bits,     1,        Low,    High}
{SIM1:,    BO2B,     A0_Out_Bits,     2,        Low,    High}
{SIM1:,    BO3B,     A0_Out_Bits,     3,        Low,    High}
{SIM1:,    BO4B,     A0_Out_Bits,     4,        Low,    High}
{SIM1:,    BO5B,     A0_Out_Bits,     5,        Low,    High}
{SIM1:,    BO6B,     A0_Out_Bits,     6,        Low,    High}
{SIM1:,    BO7B,     A0_Out_Bits,     7,        Low,    High}
}
file "../../db/mbboDirect.template" { pattern
{P,           R,         PORT,         OFFSET, MASK}
{SIM1:,    MBBOD0,     A0_Out_Bits,    0,      0xFFFF}
}
file "../../db/asynRecord.template" { pattern
{P,           R,       PORT,          ADDR,     TMOD,  IFACE}
{SIM1:,    BOAsyn,   A0_Out_Bits,     0,        Read,  asynUInt32Digital}
}
file "../../db/statistics.template" { pattern
{P,        R,       PORT,        SCAN}
{SIM1:,    BO,     A0_Out_Bits,  "10 second"}
} 
file "../../db/poll_delay.template" { pattern
{P,           R,            PORT}
{SIM1:,    BOPollDelay, A0_Out_Bits}
}

# These are the A100 inputs done with word access using asynInt32 interface
file "../../db/longinInt32.template" { pattern
{P,           R,                PORT,       OFFSET,   DATA_TYPE,      SCAN}
{SIM1:,    LI:UINT16,        A100_In_Word,   100,     UINT16,        "I/O Intr"}
{SIM1:,    LI:INT16SM,       A100_In_Word,   101,     INT16SM,       "I/O Intr"}
{SIM1:,    LI:BCD_UNSIGNED,  A100_In_Word,   102,     BCD_UNSIGNED,  "I/O Intr"}
{SIM1:,    LI:BCD_SIGNED,    A100_In_Word,   103,     BCD_SIGNED,    "I/O Intr"}
{SIM1:,    LI:INT16,         A100_In_Word,   104,     INT16,         "I/O Intr"}
{SIM1:,    LI:INT32_LE,      A100_In_Word,   105,     INT32_LE,      "I/O Intr"}
{SIM1:,    LI:INT32_LE_BS,   A100_In_Word,   107,     INT32_LE_BS,   "I/O Intr"}
{SIM1:,    LI:INT32_BE,      A100_In_Word,   109,     INT32_BE,      "I/O Intr"}
{SIM1:,    LI:INT32_BE_BS,   A100_In_Word,   111,     INT32_BE_BS,   "I/O Intr"}
{SIM1:,    LI:UINT32_LE,     A100_In_Word,   113,     UINT32_LE,     "I/O Intr"}
{SIM1:,    LI:UINT32_LE_BS,  A100_In_Word,   115,     UINT32_LE_BS,  "I/O Intr"}
{SIM1:,    LI:UINT32_BE,     A100_In_Word,   117,     UINT32_BE,     "I/O Intr"}
{SIM1:,    LI:UINT32_BE_BS,  A100_In_Word,   119,     UINT32_BE_BS,  "I/O Intr"}
{SIM1:,    LI:INT64_LE,      A100_In_Word,   121,     INT64_LE,      "I/O Intr"}
{SIM1:,    LI:INT64_LE_BS,   A100_In_Word,   125,     INT64_LE_BS,   "I/O Intr"}
{SIM1:,    LI:INT64_BE,      A100_In_Word,   129,     INT64_BE,      "I/O Intr"}
{SIM1:,    LI:INT64_BE_BS,   A100_In_Word,   133,     INT64_BE_BS,   "I/O Intr"}
{SIM1:,    LI:UINT64_LE,     A100_In_Word,   137,     UINT64_LE,     "I/O Intr"}
{SIM1:,    LI:UINT64_LE_BS,  A100_In_Word,   141,     UINT64_LE_BS,  "I/O Intr"}
{SIM1:,    LI:UINT64_BE,     A100_In_Word,   145,     UINT64_BE,     "I/O Intr"}
{SIM1:,    LI:UINT64_BE_BS,  A100_In_Word,   149,     UINT64_BE_BS,  "I/O Intr"}
{SIM1:,    LI:FLOAT32_LE,    A100_In_Word,   153,     FLOAT32_LE,    "I/O Intr"}
{SIM1:,    LI:FLOAT32_LE_BS, A100_In_Word,   155,     FLOAT32_LE_BS, "I/O Intr"}
{SIM1:,    LI:FLOAT32_BE,    A100_In_Word,   157,     FLOAT32_BE,    "I/O Intr"}
{SIM1:,    LI:FLOAT32_BE_BS, A100_In_Word,   159,     FLOAT32_BE_BS, "I/O Intr"}
{SIM1:,    LI:FLOAT64_LE,    A100_In_Word,   161,     FLOAT64_LE,    "I/O Intr"}
{SIM1:,    LI:FLOAT64_LE_BS, A100_In_Word,   165,     FLOAT64_LE_BS, "I/O Intr"}
{SIM1:,    LI:FLOAT64_BE,    A100_In_Word,   169,     FLOAT64_BE,    "I/O Intr"}
{SIM1:,    LI:FLOAT64_BE_BS, A100_In_Word,   173,     FLOAT64_BE_BS, "I/O Intr"}
}

# These are the A100 outputs done with word access on the asynInt32 interface
file "../../db/longoutInt32.template" { pattern
{P,           R,                PORT,        OFFSET,   DATA_TYPE,       PINI}
{SIM1:,    LO:UINT16,        A100_Out_Word,   100,     UINT16,          YES}
{SIM1:,    LO:INT16SM,       A100_Out_Word,   101,     INT16SM,         YES}
{SIM1:,    LO:BCD_UNSIGNED,  A100_Out_Word,   102,     BCD_UNSIGNED,    YES}
{SIM1:,    LO:BCD_SIGNED,    A100_Out_Word,   103,     BCD_SIGNED,      YES}
{SIM1:,    LO:INT16,         A100_Out_Word,   104,     INT16,           YES}
{SIM1:,    LO:INT32_LE,      A100_Out_Word,   105,     INT32_LE,        YES}
{SIM1:,    LO:INT32_LE_BS,   A100_Out_Word,   107,     INT32_LE_BS,     YES}
{SIM1:,    LO:INT32_BE,      A100_Out_Word,   109,     INT32_BE,        YES}
{SIM1:,    LO:INT32_BE_BS,   A100_Out_Word,   111,     INT32_BE_BS,     YES}
{SIM1:,    LO:UINT32_LE,     A100_Out_Word,   113,     UINT32_LE,       YES}
{SIM1:,    LO:UINT32_LE_BS,  A100_Out_Word,   115,     UINT32_LE_BS,    YES}
{SIM1:,    LO:UINT32_BE,     A100_Out_Word,   117,     UINT32_BE,       YES}
{SIM1:,    LO:UINT32_BE_BS,  A100_Out_Word,   119,     UINT32_BE_BS,    YES}
{SIM1:,    LO:INT64_LE,      A100_Out_Word,   121,     INT64_LE,        YES}
{SIM1:,    LO:INT64_LE_BS,   A100_Out_Word,   125,     INT64_LE_BS,     YES}
{SIM1:,    LO:INT64_BE,      A100_Out_Word,   129,     INT64_BE,        YES}
{SIM1:,    LO:INT64_BE_BS,   A100_Out_Word,   133,     INT64_BE_BS,     YES}
{SIM1:,    LO:UINT64_LE,     A100_Out_Word,   137,     UINT64_LE,       YES}
{SIM1:,    LO:UINT64_LE_BS,  A100_Out_Word,   141,     UINT64_LE_BS,    YES}
{SIM1:,    LO:UINT64_BE,     A100_Out_Word,   145,     UINT64_BE,       YES}
{SIM1:,    LO:UINT64_BE_BS,  A100_Out_Word,   149,     UINT64_BE_BS,    YES}
{SIM1:,    LO:FLOAT32_LE,    A100_Out_Word,   153,     FLOAT32_LE,      YES}
{SIM1:,    LO:FLOAT32_LE_BS, A100_Out_Word,   155,     FLOAT32_LE_BS,   YES}
{SIM1:,    LO:FLOAT32_BE,    A100_Out_Word,   157,     FLOAT32_BE,      YES}
{SIM1:,    LO:FLOAT32_BE_BS, A100_Out_Word,   159,     FLOAT32_BE_BS,   YES}
{SIM1:,    LO:FLOAT64_LE,    A100_Out_Word,   161,     FLOAT64_LE,      YES}
{SIM1:,    LO:FLOAT64_LE_BS, A100_Out_Word,   165,     FLOAT64_LE_BS,   YES}
{SIM1:,    LO:FLOAT64_BE,    A100_Out_Word,   169,     FLOAT64_BE,      YES}
{SIM1:,    LO:FLOAT64_BE_BS, A100_Out_Word,   173,     FLOAT64_BE_BS,   YES}
}

file "../../db/asynRecord.template" { pattern
{P,           R,         PORT,       ADDR,  TMOD,  IFACE}
{SIM1:,    LO:AsynIn,  A100_In_Word,  0,  Read, asynInt32}
}

file "../../db/asynRecord.template" { pattern
{P,           R,          PORT,       ADDR,   TMOD,  IFACE}
{SIM1:,    LO:AsynOut,  A100_Out_Word, 0,   Read, asynInt32}
}

file "../../db/statistics.template" { pattern
{P,           R,         PORT,       SCAN}
{SIM1:,    LO:,     A100_In_Word,  "10 second"}
} 

file "../../db/poll_delay.template" { pattern
{P,           R,              PORT}
{SIM1:,    LO:PollDelay, A100_In_Word}
}

